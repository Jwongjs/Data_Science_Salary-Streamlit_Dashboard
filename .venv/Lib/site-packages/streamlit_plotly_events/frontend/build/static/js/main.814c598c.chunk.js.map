{"version":3,"sources":["StreamlitPlotlyEventsComponent.tsx","index.tsx"],"names":["StreamlitPlotlyEventsComponent","render","plot_obj","JSON","parse","props","args","override_height","override_width","click_event","select_event","hover_event","Streamlit","setFrameHeight","data","layout","config","frames","onClick","plotlyEventHandler","onSelected","onHover","style","width","height","className","clickedPoints","points","forEach","arrayItem","push","x","y","curveNumber","pointNumber","pointIndex","setComponentValue","stringify","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"0QAQMA,E,4MACGC,OAAS,WAEd,IAAMC,EAAWC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,UACtBC,EAAkB,EAAKF,MAAMC,KAAX,gBAClBE,EAAiB,EAAKH,MAAMC,KAAX,eAGjBG,EAAc,EAAKJ,MAAMC,KAAX,YACdI,EAAe,EAAKL,MAAMC,KAAX,aACfK,EAAc,EAAKN,MAAMC,KAAX,YAGpB,OADAM,IAAUC,eAAeN,GAEvB,kBAAC,IAAD,CACEO,KAAMZ,EAASY,KACfC,OAAQb,EAASa,OACjBC,OAAQd,EAASc,OACjBC,OAAQf,EAASe,OACjBC,QAAST,EAAc,EAAKU,mBAAqB,aACjDC,WAAYV,EAAe,EAAKS,mBAAqB,aACrDE,QAASV,EAAc,EAAKQ,mBAAqB,aACjDG,MAAO,CAACC,MAAOf,EAAgBgB,OAAQjB,GACvCkB,UAAU,mB,EAMRN,mBAAqB,SAACL,GAE5B,IAAIY,EAA4B,GAChCZ,EAAKa,OAAOC,SAAQ,SAAUC,GAC5BH,EAAcI,KAAK,CACjBC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbC,YAAaJ,EAAUI,YACvBC,YAAaL,EAAUK,YACvBC,WAAYN,EAAUM,gBAK1BvB,IAAUwB,kBAAkBjC,KAAKkC,UAAUX,K,YA3CFY,KA+C9BC,cAAwBvC,GCnDvCwC,IAASvC,OACP,kBAAC,IAAMwC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.814c598c.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport Plot from 'react-plotly.js';\r\n\r\nclass StreamlitPlotlyEventsComponent extends StreamlitComponentBase {\r\n  public render = (): ReactNode => {\r\n    // Pull Plotly object from args and parse\r\n    const plot_obj = JSON.parse(this.props.args[\"plot_obj\"]);\r\n    const override_height = this.props.args[\"override_height\"];\r\n    const override_width = this.props.args[\"override_width\"];\r\n\r\n    // Event booleans\r\n    const click_event = this.props.args[\"click_event\"];\r\n    const select_event = this.props.args[\"select_event\"];\r\n    const hover_event = this.props.args[\"hover_event\"];\r\n\r\n    Streamlit.setFrameHeight(override_height);\r\n    return (\r\n      <Plot\r\n        data={plot_obj.data}\r\n        layout={plot_obj.layout}\r\n        config={plot_obj.config}\r\n        frames={plot_obj.frames}\r\n        onClick={click_event ? this.plotlyEventHandler : function(){}}\r\n        onSelected={select_event ? this.plotlyEventHandler : function(){}}\r\n        onHover={hover_event ? this.plotlyEventHandler : function(){}}\r\n        style={{width: override_width, height: override_height}}\r\n        className=\"stPlotlyChart\"\r\n      />\r\n    )\r\n  }\r\n\r\n  /** Click handler for plot. */\r\n  private plotlyEventHandler = (data: any) => {\r\n    // Build array of points to return\r\n    var clickedPoints: Array<any> = [];\r\n    data.points.forEach(function (arrayItem: any) {\r\n      clickedPoints.push({\r\n        x: arrayItem.x,\r\n        y: arrayItem.y,\r\n        curveNumber: arrayItem.curveNumber,\r\n        pointNumber: arrayItem.pointNumber,\r\n        pointIndex: arrayItem.pointIndex\r\n      })\r\n    });\r\n\r\n    // Return array as JSON to Streamlit\r\n    Streamlit.setComponentValue(JSON.stringify(clickedPoints))\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(StreamlitPlotlyEventsComponent)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StreamlitPlotlyEventsComponent from \"./StreamlitPlotlyEventsComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StreamlitPlotlyEventsComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}